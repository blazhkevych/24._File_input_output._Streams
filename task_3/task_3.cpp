/*
############################################ ЗАДАНИЕ ###########################################
			Файловый ввод - вывод с применением потоков
	3. Написать программу, которая позволяет удалить из HTML-файла все картинки, т.е.удалить значение атрибута src тега
<img>.
################################################################################################
	ГОТОВО
*/

#include <fstream>
#include <iostream>
#include <Windows.h>
using namespace std;

int main()
{
	SetConsoleCP(1251);
	/*
	Задает кодовую страницу ввода, используемую консолью, связанной с вызывающим процессом.
	Консоль использует страницу входного кода для преобразования ввода с клавиатуры
	в соответствующее символьное значение.
	*/
	SetConsoleOutputCP(1251);
	/*
	Задает выходную кодовую страницу, используемую консолью, связанной с вызывающим процессом.
	Консоль использует свою кодовую страницу вывода для преобразования символьных значений,
	записанных различными функциями вывода, в изображения, отображаемые в окне консоли.
	*/

	cout << "Введите путь к исходному файлу: "; // 1.html
	string sourceFilePath;
	cin >> sourceFilePath;

	// создаём входной файловый поток и присоединяем к нему файл, который открывается на чтение в текстовом режиме ( файл должен существовать)
	ifstream in;
	in.open(sourceFilePath, ios::in);
	if (!in) // если открытие файла завершилось неудачей - выходим
	{
		cout << "Error!\n";
		return 0;
	}

	cout << "Введите путь к результирующему файлу: "; // 1.html
	string resultFilePath;
	cin >> resultFilePath;

	// создаём выходной файловый поток и присоединяем к нему файл, который открывается на запись в текстовом режиме
	ofstream out;
	out.open(resultFilePath, ios::out | ios::trunc);

	while (!in.eof()) // цикл продолжается до тех пор, пока не наступит конец файла
	{
		char buf[1000];
		in.getline(buf, 1000);
		string strBuf = buf;

		int pos{ -1 };
		pos = strBuf.find("<img src=\""); //"<img src=\""
		if (pos > -1)
		{
			pos += 10;
			while (strBuf[pos] != '"')
				strBuf.erase(pos, 1);
		}
		out << strBuf << endl;
	}

	// закрываем файловые потоки
	out.close();
	in.close();
	cout << endl << "Готово !" << endl;
	return 0;
}